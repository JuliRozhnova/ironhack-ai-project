<div class="row">
  <div class="col s12">
    <a class="link" href="/storage">Go back to storage</a>
  </div>
</div>
<div class="row">
  <div class="col {{#if ownerRights}}s12 m6{{else}}s12{{/if}}">
    <p>Emotions {{#if user}}from <span class="flow-text">{{user.username}}</span>{{/if}}</p>
  </div>
  {{#if ownerRights}}
  <div class="col s12 m6">
    <form>
      <div class="input-field">
        <select name="filterEmotions" id="filterEmotions">
          <option value="all" selected>Show all</option>
          <option value="fav">Show favourite</option>
        </select>
        <label for="filterEmotions">Filter by favourites:</label>
      </div>
    </form>
  </div>
  {{/if}}
</div>
{{#if emotions}}
<div class="row" id="container-item">
  {{#each emotions}}
  <div class="col s12 m6">
    <div class="card">
      <div class="card-image">
        {{#if ../ownerRights}}
        <img src="{{photo}}" alt="{{emotion}}">
        {{#if favourite}}
        <a class="btn-floating halfway-fab waves-effect waves-light teal" href="/storage/{{user._id}}/{{_id}}/notfav">
          <i class="material-icons" title="Remove from favourite">favorite</i>
        </a>
        {{else}}
        <a class="btn-floating halfway-fab waves-effect waves-light red" href="/storage/{{user._id}}/{{_id}}/fav">
          <i class="material-icons" title="Make favourite">favorite</i>
        </a>
        {{/if}}
        {{/if}}
      </div>
      <div class="card-content">
        <p class="card-title">Emotion: {{emotion}}</p>
        <div>
          <a class="btn waves-effect waves-light" href="/storage/{{user._id}}/{{_id}}">Go for Details</a>
          {{#if ../ownerRights}}
          <a class="btn waves-effect waves-light btn-white" href="/storage/{{user._id}}/{{_id}}/delete">Delete</a>
          {{/if}}
        </div>
      </div>
    </div>
  </div>
  {{/each}}
</div>
{{else}}
<div class="row">
  <div class="col s12">
    <p class="center">No emotions to display : (</p>
  </div>
</div>
{{/if}}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    var select = document.querySelectorAll('select');
    var instancesSelect = M.FormSelect.init(select);
  });

  const storage = document
    .querySelector("a[href='/storage/{{owner._id}}']")
  if (document.location.pathname === "/storage/{{owner._id}}") {
    storage.setAttribute(
      "aria-hidden", true
    );
  }

  // select on change
  document.getElementById("filterEmotions").onchange = evt => {
    evt.preventDefault();

    axios.post("/storage/{{user._id}}", {
      value: evt.target.value
    }).then(res => {
      let itemBox = ""

      if (res.data.length) {
        res.data.forEach(item => {
          let favButton = ""
          if (JSON.parse(res.config.data).value.toString() === "fav" || item.favourite) {
            favButton = `<a class="btn-floating halfway-fab waves-effect waves-light teal" href="/storage/${item.user._id}/${item._id}/notfav">
          <i class="material-icons" title="Remove from favourite">favorite</i>
        </a>`
          }
          else {
            favButton = `<a class="btn-floating halfway-fab waves-effect waves-light red" href="/storage/${item.user._id}/${item._id}/fav">
          <i class="material-icons" title="Make favourite">favorite</i>
        </a>`
          }

          itemBox += ` <div class="col s12 m6">
    <div class="card">
      <div class="card-image">
        <img src="${item.photo}" alt="${item.emotion}" />
        ${favButton}
      </div>
      <div class="card-content">
        <p class="card-title">Emotion: ${item.emotion}</p>
        <div>
        <a class="btn waves-effect waves-light" href="/storage/${item.user._id}/${item._id}">Go for Details</a>
        <a class="btn waves-effect waves-light btn-white" href="/storage/${item.user._id}/${item._id}/delete">Delete</a>
        </div>
      </div>
    </div>
  </div>`
        })
      } else {
        itemBox += `<div class="col s12">
    <p class="center">No emotions to display : (</p>
  </div>`
      }

      document.getElementById("container-item").innerHTML = itemBox;
    }).catch(err => console.log(`Error: ${err.message}`))
  }
</script>